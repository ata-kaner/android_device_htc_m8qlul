on fs
    wait /dev/block/platform/soc.0/${ro.boot.bootdevice}
    symlink /dev/block/platform/soc.0/${ro.boot.bootdevice} /dev/block/bootdevice

# Separate copy needed to use /sbin/linker64 instead of /system/bin/linker64
service sbinqseecomd /sbin/qseecomd
    oneshot
    disabled
    user root
    group root
    seclabel u:r:recovery:s0

on property:ro.crypto.state=encrypted
    start sbinqseecomd

on init
    mkdir /system/vendor/firmware
    mkdir /system/vendor/firmware/keymaster
    symlink /firmware/image/keymaster.b00 /vendor/firmware/keymaster/keymaster.b00
    symlink /firmware/image/keymaster.b01 /vendor/firmware/keymaster/keymaster.b01
    symlink /firmware/image/keymaster.b02 /vendor/firmware/keymaster/keymaster.b02
    symlink /firmware/image/keymaster.b03 /vendor/firmware/keymaster/keymaster.b03
    symlink /firmware/image/keymaster.mdt /vendor/firmware/keymaster/keymaster.mdt

on boot
    start choice_fn
    start chargeled
    setprop sys.usb.ffs.aio_compat 1

on property:ro.bootmode=offmode_charging
    start detect_key
    exec /sbin/sleep 4
    start offmode_charging
    stop recovery

service choice_fn /sbin/choice_fn
    oneshot
    seclabel u:r:recovery:s0

service detect_key /sbin/detect_key
    disabled
    oneshot
    seclabel u:r:healthd:s0

service offmode_charging /sbin/offmode_charging
    disabled
    seclabel u:r:healthd:s0

service power_test /sbin/power_test
    disabled
    oneshot
    seclabel u:r:recovery:s0

service chargeled /sbin/chargeled
    disabled
    seclabel u:r:healthd:s0
